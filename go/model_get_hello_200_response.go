// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Simple API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

package simple_api

import (
	"math/rand"
	"time"
)



type GetHello200Response struct {

	Message string `json:"message"`
}

func genMessage() string {
	//List of possible messages
	messages := []string{
		"Yes, definitely",
		"No, not at all",
		"Ask again later",
		"Cannot predict now",
		"Concentrate and ask again",
		"The future is unclear",
		"It is certain",
		"Very doubtful",
	}

	rand.Seed(time.Now().UnixNano())

	randomIndex := rand.Intn(len(messages))

	return messages[randomIndex]
}

func GetHelloResponse() GetHello200Response {
    return GetHello200Response{
        Message: genMessage(),
    }
}

func GetHelloHandler(w http.ResponseWriter, r *http.Request) {
    response := GetHelloResponse()
    w.Header().Set("Content-Type", "application/json")
    json.NewEncoder(w).Encode(response)
}


// AssertGetHello200ResponseRequired checks if the required fields are not zero-ed
func AssertGetHello200ResponseRequired(obj GetHello200Response) error {
	elements := map[string]interface{}{
		"message": obj.Message,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertGetHello200ResponseConstraints checks if the values respects the defined constraints
func AssertGetHello200ResponseConstraints(obj GetHello200Response) error {
	return nil
}
